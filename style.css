/* define css color variable.
values can be changed later*/
:root {
    --bg-color: #8cecf1;
    --text-color: #222;
    --accent-color: #141a17;
    --border-color: #883ec5;
    --header-font: 'Roboto', sans-serif;
    /* color variables in RGB for attendees section */
    --attendance-bg: rgb(224, 247, 250);      /* very light cyan / soft aqua */
    --attendance-border: rgb(0, 172, 193);    /* bright teal / cyan blue */
    --hover-color: rgb(236, 64, 176);          /* deep teal / muted cyan */
}
/* Universal (global reset). Sets default or base styles
   Any more specific rule (like header {}, h1 {}, .class {}) will override it */
*{
    box-sizing: border-box;
  }

/* Highlight section styling using .class selector */
.highlight {
    background-color: var(--accent-color, #8c6f1f);
    color: rgb(100, 51, 204); /* fallback purple */
    padding: 1.5em;
    border: 3px dashed var(--border-color, #883ec5);
    border-radius: 12px;
  }
  
  

  /*style header using variables
    applies styling attributes to the <header> tag */

header {
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: var(--header-font);
    text-align: center;

    /* Shorthand for padding */
    padding: 1em 2em;
  
    /* Longhand margin */
    margin-top: 1em;
    margin-right: 0;
    margin-bottom: 2em;
    margin-left: 0;

    border: 20px solid var(--border-color);
    border-radius: 10px;
}

/* style the attendees section - which includes a list*/
/* unlike <header> which is a html tag attendance is an element with 
   an id. so we use #attendence*/
#attendance {
    background-color: var(--attendance-bg);
    padding: 1em;
    border: 2px solid var(--attendance-border);
    border-radius: 8px;
    margin-bottom: 2em;
}

/* flexbox the list within attendance */
#attendance ul {
    display: flex;
    flex-direction:column;       /* default, but explicit */
    justify-content: center;
    gap: 2rem;
  
    list-style:circle;
    padding: 2em;
    margin: 10px;
}

/* add hover effect for each attendee */
#attendance li {
    font-size: 1.2rem;
    font-weight: bold;
    padding: 0.5em 1em;
    transition: color 0.3s ease;
  }
  
  #attendance li:hover {
    color: var(--hover-color);
    cursor:auto;
  }
  
  /* === Grid Layout === */
#grid-section {
    margin: 2em 0;
    padding: 1em;
    background-color: hsl(180, 50%, 90%); /* HSL color */
}

.grid-container {
    /* Grid properties */
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 columns */
    gap: 1em; /* Grid gap */
    margin: 1em 0;

    /* Sizing (missing requirement) */
    min-width: 300px;
    max-width: 900px;
    height: 400px;

    /* Positioning (missing requirement) */
    position: relative; /* Parent for absolute children */
}

.grid-item {
    /* Box model (shorthand padding/margin) */
    padding: 1em;
    margin: 0.5em;
    /* color(display-p3 0.55 0.4 0.8) causes validation error */
    border: 2px solid rgb(100, 51, 204); /* fallback purple */


    /* Text styling */
    font-family: 'Libre Baskerville', serif; /* 3rd party font */
    text-align: center;
    color: rgb(0, 0, 0);

    /* color(display-p3 0.55 0.4 0.8) causes validation error */
    background-color: rgb(230, 210, 180);
    /* Border radius */
    border-radius: 10px;

    /* Positioning _*/
    position: static; /* Default, but explicit */
}

/* Adjacent sibling combinator_*/
.grid-item + .grid-item {
    border-left: 3px dashed #141a17;
}

/* Child combinator_*/
.grid-container > .grid-item {
    font-weight: bold;
}

/* :has() selector_*/
.grid-container:has(.grid-item:hover) {
    outline: 2px solid red;
}

/* Nested selector_ */
.grid-container .grid-item:hover {
        background-color: hsla(40, 83%, 31%, 0.3); /* HSLA + hover */
        position: sticky; /* Sticky position (missing) */
        top: 0;
}


/* Media query_*/
@media (max-width: 600px) {
    .grid-container {
        grid-template-columns: 1fr; /* Stack on small screens */
        height: auto; /* Flexible height */
    }
}
  
  

  